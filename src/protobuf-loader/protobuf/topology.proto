// The message of a Topology that contains nodes and links.
// Nodes are expressed by groups. The IDs of the nodes are expressed
// in a range of (BaseIndex, BaseIndex + NodesNum)
// The field name is capitalized following the convention of ns-3.

syntax = "proto3";
package ns3_proto;

message GlobalConfig {
	optional uint32 randomSeed = 1; // If not set, use randomly chosen seed
}

message HostPortConfig {
	bool pfcEnabled = 1;	
}

// HostGroup is a group of hosts that has the same configuration.
// They are assigned with a range of continuous IDs.
// It is used to aggregate a group of hosts.
message HostGroup {
	uint32 nodesNum = 1;
	uint32 baseIndex = 2;
	repeated HostPortConfig ports = 3;
}

message PortQueueConfig {	
	optional string pfcReserve = 1;
	optional string pfcXon = 2;

	optional string ecnKMin = 4;
	optional string ecnKMax = 5;
	optional double ecnPMax = 6;
}

message SwitchPortConfig {
	bool pfcEnabled = 1;
	bool ecnEnabled = 2;
	repeated PortQueueConfig queues = 3; // commonly 8 queues
}

// SwitchGroup is a group of switches that has the same configuration.
// They are assigned with a range of continuous IDs.
// It is used to aggregate a group of switches.
message SwitchGroup {
	uint32 nodesNum = 1;
	uint32 baseIndex = 2;
	string bufferSize = 3; // buffer size
	uint32 queueNum = 4; // Every port should have the same number of queues. This is used to check the consistency.
	repeated SwitchPortConfig ports = 5;
	// optional uint32 pfcDynamicShift = 6; // if set, PFC dynamic is enabled and this is the shift value
}

// Used to aggregate all HostGroups and SwitchGroups.
message AllNodes {
	uint32 num = 1;
	repeated HostGroup hostGroups = 2;
	repeated SwitchGroup switchGroups = 3;
}

message Link {
	uint32 node1 = 1;    // one end
	uint32 node2 = 2;    // the other end
	uint32 port1 = 3;    // port index of Node1
	uint32 port2 = 4;    // port index of Node2
	string rate  = 5;    // link rate
	string delay = 6;    // link delay
}

message Application { // application configurations
	repeated uint32 nodeIndices = 1; // nodes that run the application
	string protocolGroup = 2;
	string cdf = 3;
	double load = 4;      // 0.0 ~ 1.0
	uint32 startTime = 5; // in microseconds
	uint32 stopTime = 6;  // in microseconds
}

message Topology {  // used to aggregate all nodes and links as a topology
	GlobalConfig globalConfig = 1;
	AllNodes nodes = 2;
	repeated Link links = 3;
	repeated Application applications = 4;
}
